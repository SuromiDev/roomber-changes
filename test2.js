const settingsState = {}; let changelog = {}; const setSettingsCategory = category => settingsState.category = category, settingsCategories = categories => categories[settingsState.category](), materialIcon = (icon, props = "") => `\n<i class="material-icons no-select" ${props}>${icon}</i>\n`, svgIcon = icon => `\n<img src="assets/icons/${icon}.svg" alt="" class="no-select svg">\n`, settingsCategory = (icon, lcontentid, id) => `\n<div class="category no-select" id="${id}" onclick="settingsState.category = '${id}'; updateSettings();">\n\t${icon}\n\t<p data-lcontent="${lcontentid}" style="font-weight: ${settingsState.category == id ? "bold" : "none "}">${langdata[lcontentid]}</p>\n</div>\n`, pickLang = () => { setLanguage($("#langpicker").val()) }, changeUsername = () => popup(langdata["changeusername.popup.title"], '<input type="text" class="textbox" id="new-username">', [{ label: langdata["popup.buttons.cancel"], click: p => p.close() }, { label: langdata["popup.buttons.ok"], click: p => { const username = $("#new-username").val(); p.close(), setTimeout((() => { $.post(serverUrl + "/changeProfile", { ...session, toChange: "username", username: username }, (data => { if (data.error) return popup(langdata["popup.title.error"], data.error, void 0, !1, "red"); session.username = username, profile.username = username, cache[session.user] && (cache[session.user].username = username), $("#login .username").text(username), $(".profile-username div").text(username) })) }), 501) } }]), changePassword = () => popup(langdata["changepass.popup.title"], `${langdata["changepass.popup.prompt"]}<br>\n\t<input type="password" class="textbox" id="old-password"><br>\n\t${langdata["changepass.popup.prompt2"]}<br>\n\t<input type="password" class="textbox" id="new-password">`, [{ label: langdata["popup.buttons.cancel"], click: p => p.close() }, { label: langdata["popup.buttons.ok"], click: p => { const oldPassword = $("#old-password").val(), newPassword = $("#new-password").val(); p.close(), setTimeout((() => { $.post(serverUrl + "/changePassword", { user: session.user, password: oldPassword, newPassword: newPassword }, (data => { popup(langdata["popup.title.success"], langdata["changepass.popup.success"], void 0, !1, "lime") })).fail((() => popup(langdata["popup.title.error"], langdata["changepass.popup.error.invalidpass"], void 0, !1, "red"))) }), 501) } }]), changeEmail = () => popup(langdata["changeemail.popup.title"], `${langdata["changeemail.popup.prompt"]}<br>\n\t<input type="password" class="textbox" id="password">`, [{ label: langdata["popup.buttons.cancel"], click: p => p.close() }, { label: langdata["popup.buttons.ok"], click: p => { const password = $("#password").val(); p.close(), setTimeout((() => { $.post(serverUrl + "/validatePassword", { user: session.user, password: password }, (data => { popup(langdata["changeemail.popup.title"], `${langdata["changeemail.popup.prompt2"]}<br>\n\t\t\t\t\t\t<input type="text" class="textbox" id="email">`, [{ label: langdata["popup.buttons.cancel"], click: p => p.close() }, { label: langdata["popup.buttons.ok"], click: p => { const email = $("#email").val(); p.close(), setTimeout((() => { $.post(serverUrl + "/changeEmail", { user: session.user, password: password, email: email }, (data => { popup(langdata["popup.title.success"], langdata["changeemail.popup.success"], void 0, !1, "lime"); const firstPart = email.substr(0, email.indexOf("@")), secondPart = email.substr(email.indexOf("@")); profile.email = "*".repeat(firstPart.length) + secondPart, updateSettings() })).fail((() => popup(langdata["popup.title.error"], langdata["changeemail.popup.error.invalidemail"], void 0, !1, "red"))) }), 501) } }]) })).fail((() => popup(langdata["popup.title.error"], langdata["changeemail.popup.error.invalidpass"], void 0, !1, "red"))) }), 501) } }]), setInputVolume = () => { setCookie("inputVolume", $("#input-volume").val()) }, setOutputVolume = () => { setCookie("outputVolume", $("#output-volume").val()), testAudio.volume = Number(getCookie("inputVolume")) || .5 }; let testAudio = new Audio, testingAudio = !1, testInterval = 0; const getAudioDevice = () => getCookie("audioDevice") ? getCookie("audioDevice") : audioDevices[0] ? audioDevices[0].deviceId : "", toggleMicTest = () => { if (testingAudio = !testingAudio, !testingAudio) return clearInterval(testInterval), testAudio.pause(), testAudio.remove(), testAudio = new Audio, testAudio.volume = Number(getCookie("inputVolume")) || .5, window.testStream.getTracks().forEach((track => track.stop())), $(".mic-test .label").text("Start Test"), $(".mic-test .bar .progress").css({ "mask-image": "linear-gradient(to right, black 0%, transparent 0%)", "-webkit-mask-image": "linear-gradient(to right, black 0%, transparent 0%)" }), void delete window.testStream; $(".mic-test .label").text("Stop Test"), navigator.mediaDevices.getUserMedia({ audio: !0, deviceId: getAudioDevice() }).then((stream => { window.testStream = stream, testAudio.srcObject = stream; const audioCtx = new AudioContext, analyser = audioCtx.createAnalyser(); analyser.fftSize = 2048; audioCtx.createMediaStreamSource(stream).connect(analyser); const data = new Float32Array(analyser.frequencyBinCount); testInterval = setInterval((() => { analyser.getFloatFrequencyData(data); let sum = 0; data.forEach((i => { sum += i })), sum /= data.length, sum += 120, sum = -sum, $(".mic-test .bar .progress").css({ "mask-image": `linear-gradient(to right, black ${sum / (analyser.maxDecibels / 100)}%, transparent ${sum / ((analyser.maxDecibels + 10) / 100)}%)`, "-webkit-mask-image": `linear-gradient(to right, black ${sum / (analyser.maxDecibels / 100)}%, transparent ${sum / ((analyser.maxDecibels + 10) / 100)}%)` }) }), 30), testAudio.addEventListener("loadedmetadata", (() => { testAudio.play() })) })) }; let audioDevices = [], options = {}; options = getAudioDevice() ? { deviceId: getAudioDevice() } : { deviceId: "" }, navigator.mediaDevices.getUserMedia({ audio: options }).then((audio => { navigator.mediaDevices.enumerateDevices().then((devices => { console.log(devices), audioDevices = devices, audio.getTracks().forEach((track => track.stop())) })) })); const setAudioDevice = () => { setCookie("audioDevice", $("#device").val()) }, categoryContent = () => ({ profile: () => `\n\t\t<div class="flex flex-down full-width align-center">\n\t\t\t<h1>${langdata["settings.category.userprofile"]}</h1>\n\t\t\t<div id="profile-avatar">\n\t\t\t\t<img src="${profile.avatar || "avatars/default.png"}" alt="">\n\t\t\t\t<div id="hover" onclick="setupPickProfilePicture()" class="flex align-center justify-center">${svgIcon("image_plus")}</div>\n\t\t\t</div>\n\t\t\t<div id="profile-user" class="align-center">\n\t\t\t\t<div class="flex profile-username justify-center align-center no-select" onclick="changeUsername()"><div>${profile.username}</div>${materialIcon("edit")}</div>\n\t\t\t\t${profile.xtra ? '\n\t\t\t\t\t<div id="profile-xtra">XTRA</div>\n\t\t\t\t' : ""}\n\t\t\t</div>\n\t\t</div>\n\t`, account: () => `\n\t\t<div class="flex flex-down align-center">\n\t\t\t<h1 id="account-title">${langdata["settings.category.accountnsecurity"]}</h1>\n\t\t\t<div id="account-content" class="flex full-width">\n\t\t\t\t<div id="account-user" class="flex flex-down">\n\t\t\t\t\t<div id="account-profile" class="flex full-width align-center">\n\t\t\t\t\t\t<img src="${profile.avatar || "avatars/default.png"}" alt="">\n\t\t\t\t\t\t<div class="profile-username">${profile.username}</div>\n\t\t\t\t\t\t${materialIcon("exit_to_app", 'onclick="logoutPopup()"')}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id="account-credentials" class="flex-down">\n\t\t\t\t\t\t<div class="flex align-center text-field" onclick="changeEmail()">\n\t\t\t\t\t\t\t<div class="label">${langdata["settings.category.accountnsecurity.email"]}</div>\n\t\t\t\t\t\t\t<div class="input no-select">${profile.email}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="flex align-center text-field" onclick="changePassword()">\n\t\t\t\t\t\t\t<div class="label">${langdata["settings.category.accountnsecurity.password"]}</div>\n\t\t\t\t\t\t\t<div class="input no-select">*******</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div id="account-qr" class="flex flex-down">\n\t\t\t\t\t<div id="qr-image" onclick="popupQR()">\n\t\t\t\t\t\t<img src="assets/fake-qr.png">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id="qr-label">${langdata["settings.category.accountnsecurity.urqr"]}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`, appearance: () => `\n\t\t<div class="flex flex-down align-center justify-center">\n\t\t\t<h1 style="margin-bottom: 35px;">${langdata["settings.category.appearance"]}</h1>\n\t\t\t<div id="setup-themes">\n\t\t\t\t<div class="setup-theme">\n\t\t\t\t\t<img src="../assets/landscape-preview.png" onclick="setTheme('landscape')">\n\t\t\t\t\t<p>${langdata["settings.category.appearance.landscape"]}</p>\n\t\t\t\t</div>\n\t\t\t\t<div class="setup-theme">\n\t\t\t\t\t<img src="../assets/gradient-preview.png" onclick="setTheme('gradient')">\n\t\t\t\t\t<p>${langdata["settings.category.appearance.gradient"]}</p>\n\t\t\t\t</div>\n\t\t\t\t<div class="setup-theme">\n\t\t\t\t\t<img src="../assets/dark-preview.png" onclick="setTheme('dark')">\n\t\t\t\t\t<p>${langdata["settings.category.appearance.dark"]}</p>\n\t\t\t\t</div>\n\t\t\t\t<div class="setup-theme">\n\t\t\t\t\t<img src="../assets/light-preview.png" onclick="setTheme('light')">\n\t\t\t\t\t<p>${langdata["settings.category.appearance.light"]}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button class="button" id="ldm" onclick="ldmToggle();" style="padding: 10px; font-size: 2rem;"><i class="large material-icons" style="transform: scale(150%); margin-right: 10px;">opacity</i> <span>${langdata["settings.category.appearance.ldm"]}: ${langdata["status." + (ldmOn ? "on" : "off")]}</span></button>\n\t\t</div>\n\t`, notifs: () => "\n\t\tNot implemented\n\t", language: () => `\n\t\t<div class="flex flex-down full-width align-center">\n\t\t\t<h1>${langdata["settings.category.lang"]}</h1>\n\t\t\t<label for="langpicker">${langdata["settings.category.lang.title"]}:</label>\n\t\t\t<select id="langpicker" name="langpicker" class="textbox" style="font-size: 1.5rem;" onchange="pickLang()">\n\t\t\t\t<option value="en-US">English (United States)</option>\n\t\t\t\t<option value="en-GB">English (United Kingdom)</option>\n\t\t\t\t<option value="pl-PL">Polski (Polska)</option>\n\t\t\t\t<option value="ru-RU">Русский (Россия)</option>\n\t\t\t\t<option value="me-OW">Meow (ฅ^•ﻌ•^ฅ)</option>\n\t\t\t\t<option value="vi-VI">Tiếng Việt (Vietnamese)</option>\n\t\t\t</select>\n\t\t</div>\n\t`, audio_video: () => `\n\t\t<div class="audio-heading">${materialIcon("volume_up")}<b>Audio</b></div>\n\t\t<div class="audio-volume">\n\t\t\t<div class="inputs">\n\t\t\t\t<div class="audio-input">\n\t\t\t\t\tInput device<br/>\n\t\t\t\t\t<select id="device" name="device" class="textbox" onchange="setAudioDevice()">\n\t\t\t\t\t\t${audioDevices.filter((device => "audioinput" == device.kind)).map((device => ({ label: device.label, id: device.deviceId }))).map((({ label: label, id: id }) => `<option value="${id}">${label}</option>`)).join("\n")}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div class="audio-input">\n\t\t\t\t\tInput volume<br/>\n\t\t\t\t\t<div class="input">\n\t\t\t\t\t\t${materialIcon("volume_up")}\n\t\t\t\t\t\t<input type="range" min="0.0" max="1.0" step="0.01" value="${Number(getCookie("inputVolume") || .5)}" class="volume-slider" id="input-volume" onchange="setInputVolume()">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="audio-input">\n\t\t\t\t\tOutput volume<br/>\n\t\t\t\t\t<div class="input">\n\t\t\t\t\t\t${materialIcon("volume_up")}\n\t\t\t\t\t\t<input type="range" min="0.0" max="1.0" step="0.01" value="${Number(getCookie("outputVolume") || .5)}" class="volume-slider" id="output-volume" onchange="setOutputVolume()">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="mic-test">\n\t\t\t\t<div class="audio-heading"><b>Microphone test</b></div>\n\t\t\t\tSay something to play it back\n\t\t\t\t<div class="button-bar">\n\t\t\t\t\t<button class="button" onclick="toggleMicTest()">${materialIcon("mic")}<div class="label">Start Test</div></button>\n\t\t\t\t\t<div class="bar">\n\t\t\t\t\t\t<div class="progress">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`, changelog: () => `\n\t<div class="flex flex-down align-center justify-center">\n\t<img src="assets/roomberfull2.png" style="width: 60%;">\n\t<h2 style="margin-bottom: 10px;">Roomber ${version.text}</h2>\n\t<h3 style="margin-bottom: 3px;">${langdata["settings.category.changelog"]}</h2>\n\t<div style="opacity: 0.9; text-align: center;">\n\t<div id="changelog-content" class="coolslider">\n\n\t\t${changelogShit("New features", changelog.newfeatures, [0, 255, 0])}\n\t\t${changelogShit("Updates", changelog.updates, [255, 0, 0])}\n\t\t${changelogShit("Patches", changelog.patches, [255, 0, 255])}\n\t\t</div>\n\t</div>\n</div>\n\t`, about: () => `\n\t\t<div class="flex flex-down align-center justify-center">\n\t\t\t<img src="assets/roomberfull2.png" style="width: 60%;">\n\t\t\t<h2 style="margin-bottom: 10px;">Roomber ${version.text}</h2>\n\t\t\t<div style="opacity: 0.9; text-align: center;">\n\t\t\t\t<p>${langdata["settings.category.about.line1"]}</p>\n\t\t\t\t<p>${langdata["settings.category.about.line2"]}</p>\n\t\t\t\t<p>${langdata["settings.category.about.line3"]}</p>\n\t\t\t\t${langdata["settings.category.about.line4"] ? `<p>${langdata["settings.category.about.line4"]}</p>` : ""}\n\t\t\t</div>\n\t\t</div>\n\t` }[settingsState.category]()), settings = () => `\n<div class="settings ${theme}">\n\t<heading>\n\t\t<div id="title" class="no-select">\n\t\t\t<i class="large material-icons">settings</i> <span data-lcontent="settings.title">${langdata["settings.title"]}</span>\n\t\t</div>\n\t\t<div id="close" onclick="closeSettings()">\n\t\t\t<i class="material-icons no-select">close</i>\n\t\t</div>\n\t</heading>\n\t<section>\n\t\t<aside>\n\t\t\t${settingsCategory(materialIcon("account_circle"), "settings.category.userprofile", "profile")}\n\t\t\t${settingsCategory(svgIcon("person_shield"), "settings.category.accountnsecurity", "account")}\n\t\t\t${settingsCategory(materialIcon("palette"), "settings.category.appearance", "appearance")}\n\t\t\t\x3c!--${settingsCategory(svgIcon("notifications_circle"), "settings.category.notifs", "notifs")}--\x3e\n\t\t\t${settingsCategory(materialIcon("translate"), "settings.category.lang", "language")}\n\t\t\t${settingsCategory(materialIcon("volume_up"), "settings.category.audionvideo", "audio_video")}\n\t\t\t${settingsCategory(materialIcon("library_books"), "settings.category.changelog", "changelog")}\n\t\t\t${settingsCategory(svgIcon("roomber"), "settings.category.about", "about")}\n\t\t</aside>\n\t\t<div id="content">\n\t\t\t${{ profile: () => `\n\t\t<div class="flex flex-down full-width align-center">\n\t\t\t<h1>${langdata["settings.category.userprofile"]}</h1>\n\t\t\t<div id="profile-avatar">\n\t\t\t\t<img src="${profile.avatar || "avatars/default.png"}" alt="">\n\t\t\t\t<div id="hover" onclick="setupPickProfilePicture()" class="flex align-center justify-center">${svgIcon("image_plus")}</div>\n\t\t\t</div>\n\t\t\t<div id="profile-user" class="align-center">\n\t\t\t\t<div class="flex profile-username justify-center align-center no-select" onclick="changeUsername()"><div>${profile.username}</div>${materialIcon("edit")}</div>\n\t\t\t\t${profile.xtra ? '\n\t\t\t\t\t<div id="profile-xtra">XTRA</div>\n\t\t\t\t' : ""}\n\t\t\t</div>\n\t\t</div>\n\t`, account: () => `\n\t\t<div class="flex flex-down align-center">\n\t\t\t<h1 id="account-title">${langdata["settings.category.accountnsecurity"]}</h1>\n\t\t\t<div id="account-content" class="flex full-width">\n\t\t\t\t<div id="account-user" class="flex flex-down">\n\t\t\t\t\t<div id="account-profile" class="flex full-width align-center">\n\t\t\t\t\t\t<img src="${profile.avatar || "avatars/default.png"}" alt="">\n\t\t\t\t\t\t<div class="profile-username">${profile.username}</div>\n\t\t\t\t\t\t${materialIcon("exit_to_app", 'onclick="logoutPopup()"')}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id="account-credentials" class="flex-down">\n\t\t\t\t\t\t<div class="flex align-center text-field" onclick="changeEmail()">\n\t\t\t\t\t\t\t<div class="label">${langdata["settings.category.accountnsecurity.email"]}</div>\n\t\t\t\t\t\t\t<div class="input no-select">${profile.email}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="flex align-center text-field" onclick="changePassword()">\n\t\t\t\t\t\t\t<div class="label">${langdata["settings.category.accountnsecurity.password"]}</div>\n\t\t\t\t\t\t\t<div class="input no-select">*******</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div id="account-qr" class="flex flex-down">\n\t\t\t\t\t<div id="qr-image" onclick="popupQR()">\n\t\t\t\t\t\t<img src="assets/fake-qr.png">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id="qr-label">${langdata["settings.category.accountnsecurity.urqr"]}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`, appearance: () => `\n\t\t<div class="flex flex-down align-center justify-center">\n\t\t\t<h1 style="margin-bottom: 35px;">${langdata["settings.category.appearance"]}</h1>\n\t\t\t<div id="setup-themes">\n\t\t\t\t<div class="setup-theme">\n\t\t\t\t\t<img src="../assets/landscape-preview.png" onclick="setTheme('landscape')">\n\t\t\t\t\t<p>${langdata["settings.category.appearance.landscape"]}</p>\n\t\t\t\t</div>\n\t\t\t\t<div class="setup-theme">\n\t\t\t\t\t<img src="../assets/gradient-preview.png" onclick="setTheme('gradient')">\n\t\t\t\t\t<p>${langdata["settings.category.appearance.gradient"]}</p>\n\t\t\t\t</div>\n\t\t\t\t<div class="setup-theme">\n\t\t\t\t\t<img src="../assets/dark-preview.png" onclick="setTheme('dark')">\n\t\t\t\t\t<p>${langdata["settings.category.appearance.dark"]}</p>\n\t\t\t\t</div>\n\t\t\t\t<div class="setup-theme">\n\t\t\t\t\t<img src="../assets/light-preview.png" onclick="setTheme('light')">\n\t\t\t\t\t<p>${langdata["settings.category.appearance.light"]}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button class="button" id="ldm" onclick="ldmToggle();" style="padding: 10px; font-size: 2rem;"><i class="large material-icons" style="transform: scale(150%); margin-right: 10px;">opacity</i> <span>${langdata["settings.category.appearance.ldm"]}: ${langdata["status." + (ldmOn ? "on" : "off")]}</span></button>\n\t\t</div>\n\t`, notifs: () => "\n\t\tNot implemented\n\t", language: () => `\n\t\t<div class="flex flex-down full-width align-center">\n\t\t\t<h1>${langdata["settings.category.lang"]}</h1>\n\t\t\t<label for="langpicker">${langdata["settings.category.lang.title"]}:</label>\n\t\t\t<select id="langpicker" name="langpicker" class="textbox" style="font-size: 1.5rem;" onchange="pickLang()">\n\t\t\t\t<option value="en-US">English (United States)</option>\n\t\t\t\t<option value="en-GB">English (United Kingdom)</option>\n\t\t\t\t<option value="pl-PL">Polski (Polska)</option>\n\t\t\t\t<option value="ru-RU">Русский (Россия)</option>\n\t\t\t\t<option value="me-OW">Meow (ฅ^•ﻌ•^ฅ)</option>\n\t\t\t\t<option value="vi-VI">Tiếng Việt (Vietnamese)</option>\n\t\t\t</select>\n\t\t</div>\n\t`, audio_video: () => `\n\t\t<div class="audio-heading">${materialIcon("volume_up")}<b>Audio</b></div>\n\t\t<div class="audio-volume">\n\t\t\t<div class="inputs">\n\t\t\t\t<div class="audio-input">\n\t\t\t\t\tInput device<br/>\n\t\t\t\t\t<select id="device" name="device" class="textbox" onchange="setAudioDevice()">\n\t\t\t\t\t\t${audioDevices.filter((device => "audioinput" == device.kind)).map((device => ({ label: device.label, id: device.deviceId }))).map((({ label: label, id: id }) => `<option value="${id}">${label}</option>`)).join("\n")}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div class="audio-input">\n\t\t\t\t\tInput volume<br/>\n\t\t\t\t\t<div class="input">\n\t\t\t\t\t\t${materialIcon("volume_up")}\n\t\t\t\t\t\t<input type="range" min="0.0" max="1.0" step="0.01" value="${Number(getCookie("inputVolume") || .5)}" class="volume-slider" id="input-volume" onchange="setInputVolume()">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="audio-input">\n\t\t\t\t\tOutput volume<br/>\n\t\t\t\t\t<div class="input">\n\t\t\t\t\t\t${materialIcon("volume_up")}\n\t\t\t\t\t\t<input type="range" min="0.0" max="1.0" step="0.01" value="${Number(getCookie("outputVolume") || .5)}" class="volume-slider" id="output-volume" onchange="setOutputVolume()">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="mic-test">\n\t\t\t\t<div class="audio-heading"><b>Microphone test</b></div>\n\t\t\t\tSay something to play it back\n\t\t\t\t<div class="button-bar">\n\t\t\t\t\t<button class="button" onclick="toggleMicTest()">${materialIcon("mic")}<div class="label">Start Test</div></button>\n\t\t\t\t\t<div class="bar">\n\t\t\t\t\t\t<div class="progress">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`, changelog: () => `\n\t<div class="flex flex-down align-center justify-center">\n\t<img src="assets/roomberfull2.png" style="width: 60%;">\n\t<h2 style="margin-bottom: 10px;">Roomber ${version.text}</h2>\n\t<h3 style="margin-bottom: 3px;">${langdata["settings.category.changelog"]}</h2>\n\t<div style="opacity: 0.9; text-align: center;">\n\t<div id="changelog-content" class="coolslider">\n\n\t\t${changelogShit("New features", changelog.newfeatures, [0, 255, 0])}\n\t\t${changelogShit("Updates", changelog.updates, [255, 0, 0])}\n\t\t${changelogShit("Patches", changelog.patches, [255, 0, 255])}\n\t\t</div>\n\t</div>\n</div>\n\t`, about: () => `\n\t\t<div class="flex flex-down align-center justify-center">\n\t\t\t<img src="assets/roomberfull2.png" style="width: 60%;">\n\t\t\t<h2 style="margin-bottom: 10px;">Roomber ${version.text}</h2>\n\t\t\t<div style="opacity: 0.9; text-align: center;">\n\t\t\t\t<p>${langdata["settings.category.about.line1"]}</p>\n\t\t\t\t<p>${langdata["settings.category.about.line2"]}</p>\n\t\t\t\t<p>${langdata["settings.category.about.line3"]}</p>\n\t\t\t\t${langdata["settings.category.about.line4"] ? `<p>${langdata["settings.category.about.line4"]}</p>` : ""}\n\t\t\t</div>\n\t\t</div>\n\t` }[settingsState.category]()}\n\t\t</div>\n\t</section>\n</div>\n`, updateSettings = () => { $(".settings").remove(), $("#body").append(settings()), $(".settings").css("display", "flex"), $("select#langpicker.textbox").val(getCookie("lang") || "en-US"), $(".audio-input select#device").val(getAudioDevice()) }, closeSettings = () => { $(".settings").fadeOut(300, (() => { $(".settings").remove() })) }, openSettings = () => { var category; $.getJSON(serverUrl + "/changelog", (data => { changelog = data })), category = "profile", settingsState.category = category, $("#body").append(settings()), $(".settings").css("display", "flex").hide().fadeIn(300) }, changelogShit = (title, data, colorRGB) => { let html = `<p class="changelogcategorytitleshit" style="background-color: rgba(${colorRGB.toString()}, 0.5); border-bottom: solid rgb(${colorRGB.toString()}) 4px;">${title}</p>`; return data.forEach(((element, index) => { html += `<span class="newfeature-title">${element.title}</span><span class="newfeature-desc">${element.desc}</span><br>${element.image ? `<img class='attachment changelogattach' src='${element.image}'></img>` : ""}${index + 1 >= data.length ? "" : "<div class='sep-horiz'></div>"}` })), html };